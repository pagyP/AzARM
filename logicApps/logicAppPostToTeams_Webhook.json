{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clientID": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        },
        "clientSecret": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        },
        "tenantID": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        },
        "logicAppNamePrefix": {
           "type": "string",
           "metadata": {
                "description": "description"
            }
        },
        "eventGridAPIConnector": {
            "type": "string",
            "defaultValue": "eventGridLogicAppConnector",
            "metadata": {
                "description": "The name of the Event GRid API Connection"
            }
        }
        
    },
    "variables": {
        //Update the below with the relevant subscription ID
      "path":  "/subscriptions/@{encodeURIComponent('entersubID')}/providers/@{encodeURIComponent('Microsoft.Resources.Subscriptions')}/resource/eventSubscriptions",
      // Service Prinicpal App IDs to exclude from notification. That is approved Service Princiapals
      // appID1 is used by guest configuration in 
      "appID1": "e935b4a5-8968-416d-8414-caed51c782a9",
      //appID 2 is an SP used by Azure Policy
      "appID2": "1d78a85d-813d-46f0-b496-dd72f50a3ec0",
      //"appID3": "d24781bb-3dd1-4c6c-ab42-44a12385079e", 
      // Resource Groups to monitor for changes
      "resourceGroup1": "rg1",
      "resourceGroup2": "rg2",
      "resourceGroup3": "rg3",
      "resourceGroup4": "rg4",
      "resourceGroup5": "rg5",
      "resourceGroup6": "rg6",
      // Logic App Name Expressions
      "logicAppSubscription": "[subscription().displayName]",
      "uniqueLogicAppName": "[concat(parameters('logicAppNamePrefix'), '-', variables('logicAppSubscription'))]", 
      "laName": "[replace(variables('uniqueLogicAppName'), ' ', '-')]"
      
    },
    "resources": [
        
        {
            "name": "[parameters('eventGridAPIConnector')]",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "displayName": "[parameters('eventGridAPIConnector')]",
                "parameterValues": {
                    "token:clientId": "[parameters('clientID')]",
                    "token:clientSecret": "[parameters('clientSecret')]",
                    "token:TenantId": "[parameters('tenantID')]",
                    "token:grantType": "client_credentials"

                },
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                }
            }
        },
        {
            "name": "[variables('LaName')]",
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('eventGridAPIConnector'))]"
                
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/schemas/2016-06-01/Microsoft.Logic.json",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Microsoft.Resources.ResourceActionSuccess",
                                                "Microsoft.Resources.ResourceDeleteSuccess",
                                                "Microsoft.Resources.ResourceWriteSuccess"
                                            ]
                                        },
                                        "topic": "[concat('/subscriptions/', subscription().subscriptionId)]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[variables('path')]",
                                
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "HTTP_Webhook": {
                                    "runAfter": {},
                                    "type": "HttpWebhook",
                                    "inputs": {
                                        "subscribe": {
                                            "body": {
                                                "@@context": "https://schema.org/extensions",
                                                "@@type": "MessageCard",
                                                "sections": [
                                                    {
                                                        "facts": [
                                                            {
                                                                "name": "userName",
                                                                "value": "@{triggerBody()?['data']?['claims']?['name']}"
                                                            },
                                                            {
                                                                "name": "Event Time",
                                                                "value": "@{triggerBody()?['eventTime']}"
                                                            },
                                                            {
                                                                "name": "Event Action",
                                                                "value": "@{triggerBody()?['data']?['authorization']?['action']}"
                                                            },
                                                            {
                                                                "Value": "@{triggerBody()?['data']?['resourceUri']}          ",
                                                                "name": "Affected Resource"
                                                            },
                                                            {
                                                                "name": "User Type",
                                                                "value": "@{triggerBody()?['data']?['authorization']?['evidence']?['principalType']}"
                                                            },
                                                            {
                                                                "name": "ServicePrincipal Client ID",
                                                                "value": "@{triggerBody()?['data']?['claims']?['appid']}"
                                                            }
                                                        ],
                                                        "text": "A manual change has occurred"
                                                    }
                                                ],
                                                "summary": "Manual Change-Notification",
                                                "themeColor": "D778D7",
                                                "title": "Manual Change Occurred"
                                            },
                                            "method": "POST",
                                            "uri": "enter webook uri"
                                        },
                                        "unsubscribe": {}
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@triggerBody()?['data']?['claims']?['appid']",
                                                        //"aea265cc-105d-4550-b294-20983b9f642c"
                                                        "[variables('appID1')]"
                                                    ]
                                                }
                                            },
                                            {
                                              "not": {
                                                "equals": [
                                                        "@triggerBody()?['data']?['claims']?['appid']",
                                                       "[variables('appID2')]"
                                                    ]
                                                }
                                            }
                                            //{
                                              //  "not": {
                                                //    "equals": [
                                                  //      "@triggerBody()?['data']?['claims']?['appid']",
                                                    //    "[variables('appID3')]"
                                                    //]
                                               // }
                                          //  }
                                        ]
                                    },
                                    {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['data']?['authorization']?['evidence']?['principalType']",
                                                    "ServicePrincipal"
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@triggerBody()?['data']?['authorization']?['evidence']?['principalType']",
                                                    "User"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "or": [
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test1"
                                                    "[variables('resourceGroup1')]"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test2"
                                                    "[variables('resourceGroup2')]"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test3"
                                                    "[variables('resourceGroup3')]"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test3"
                                                    "[variables('resourceGroup4')]"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test3"
                                                    "[variables('resourceGroup5')]"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@triggerBody()?['subject']",
                                                    //"test3"
                                                    "[variables('resourceGroup6')]"
                                                ]
                                            },
                                            {
                                    "contains": [
                                        "@triggerBody()?['data']?['authorization']?['action']",
                                        "roleAssignments"
                                    ]
                                }
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                      
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('eventGridAPIConnector'))]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/azureeventgrid')]"
                            }
                            
            }
        }
                }
        }
        }
    ]
}
    
    